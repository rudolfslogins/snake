{"version":3,"sources":["../src/engine/Configuration.ts","../src/engine/Cell.ts","../src/engine/Grid.ts","../src/engine/Snake.ts","../src/engine/Game.ts","../src/GameUI.ts"],"names":[],"mappings":";;AKAA;;AAMA;;AAEA,ALRO,IKQD,ALRO,SKQE,GAAG,EAAlB,ELR6B,GAAG,EAAzB;AKSP,AJTA,AGAA,AFAA,ACAA,IESM,AJTN,IAAA,CISW,GAAG,GAAd;AJTA,ADCO,IAAM,cAAc,GAAG,EAAvB;AKUP,AJXA,AGCA,AFAA,ACEA,IEQA,AFRA,KAAA,CEQA,EJXA;AIWA,AJPE,ADFK,AGCP,IHDa,KAAK,ECEhB,CDFmB,GCEnB,ADFK,CCEO,CAAZ,EAAuB,CAAvB,EAAgC;AIOlC,AJNI,AGHJ,AFEA,ACDA,IDCA,IAAA,CDCS,CAAL,EIMJ,AFRA,CFEa,CAAT;AIUF,AJTE,ADHG,AECP,ACDA,IHAa,KCGJ,CAAL,CISF,AFZF,EFGa,ADHS,CCGlB,EDHqB,AGAzB,CEYE,CAAY,ALZP,CGAP,KEYE,EAAuC,IAAvC,EAAiD;AAC/C,AJTD,AGFH,AFDA,ACAE,ICCF,IAAA,CCWS,AFZP,GDAF,CCAE,EEYE,CFZK,EEYS,EFZL,IEYT,MFZK,CAAS,CAAT,EAAY,CAAZ,CAAP;AEaE,ADZJ,AFSE,ACTA,SEYO,AFZP,EDSA,EGGE,AFZF,EDSA,CGGc,AHHF,ACTL,CAAC,GEYN,CFZU,QDSZ,EAAwC,ACThC,CAAS,CAAT,EAAY,CAAZ,CAAD,EAAiB,IAAI,UAAJ,CAAS,CAAT,EAAY,CAAZ,CAAjB,CAAP;AEaE,AJVJ,AGHA,AFCE,ACAA,IEYE,KJVJ,ACFE,ACAA,GCDF,CHGA,ECFE,GAAS,ACAT,CDCE,ECDqB,EDCjB,EGWiB,CAAC,EFZxB,GEY6B,EHX3B,CAAS,CGWa,CAAU,AHXhC,EAAa,EGWS,AHXtB,CGWqC,AHZ9B,EAEP,EGUsB,CAAD,CAArB,AHVI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAFO,EAGP,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAHO,EAIP,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAJO,EAKP,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CALO,CAAT;AGcE,AJpBJ,AGcE,AFCE,ACRF,CFPF,EAAA,CIoBI,KHLK,ACRP,CEaQ,CAAC,ADNT,IAAA,CAAY,CDPZ,GAAW,CAAX,CDQE,GAAqB,EGKrB,CAAwB,CDN1B,EAAwC,MCMtC,CHLA,CGKmC,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAnC,EAA8D,KAA9D;AACA,ADfM,AFUP,ACsDF,IEjDG,KDfM,CCeA,CAAC,GDfD,ECeN,CDfsB,CAAhB;ACgBP,ADfO,SAAA,OAAA,GAAmB,KAAnB;AAQN,AFGF,ACPA,EDOA,ACPA,IDOA,CAAA,ACPA,CAAA,CCIO,OFGP,CAAA,ACPA,CAAA,GDOA,CEHE,EFGF,CEHuB,KDJvB,GAAA,CDOK,IEHH,CFGF,EAAiB,ECPJ,SAAb,EAAiC;AEajC,ADRE,AFGA,ACPA,EEYF,MAAA,AFZM,CEYN,ADRO,EFGE,ECPE,CCIT,EFGY,CEHC,CCQf,CAAA,EDRmB,CFGV,ACPH,CEYN,AHLqB,GGKrB,CFZyB,EDOhB,GAAqB,CEHf,CDJT,CCIJ,CCQG,CHL8B,CCPC,EEYpC,EAAiB,KFZ4B,GDOf,CAAmB,CCPC,IDOpB,ECP5B,CDOuD,CCPC,IDOI,aAAL,CAAmB,MAA1E,GAAmF;AGMnF,ADRA,AFGE,ACPA,QEYI,CDRD,CFGC,CCPC,ECIP,ECQa,AHLF,CEHC,ECQI,AHLF,EEHE,ADJd,EDOgB,CGKG,AHLF,ACPA,KDOL,ACPU,CEYR,AHLS,CGKG,ADRhB,CAAS,EFGQ,CAAC,EEHJ,CDJxB,GEYc,AHLS,CGKc,IAAvB,AHLyB,CGKzC,GDRY,CAAZ,0BFGc,CAAZ;AGMF,ADRA,AFGE,ACPD,KAFD,IEcK,ADRA,CFGC,CCPC,IDOI,ACPA,ECIX,CFGc,EEHE,ADJA,CCIhB,CCQA,AHLkB,CGKC,AHLA,KAAL,CAAW,ACPd,CEYX,GHL6B,CAAC,ACPA,MDOL,ACPd,IAA6B,CDOC,QCPQ,KAAK,IAA/C,EAAqD,UDO9C,CAAZ;AEFF,ADJE,SCIG,EDJE,KCIP,GAAe,CDJb,GCIF,ADJmB,KAAK,SAAtB;AEYF,ADPA,AFGA,ACPC,KAFM,GEaH,CDPC,CFGD,CAAC,ACPE,EEWE,EFXE,CDOD,CGIN,CAAU,ADPd,EDJgB,CCIC,CFGZ,CEHL,AFGiB,IAAZ,CAAiB,CCPX,CEWP,CAAuB,GFXG,CEW1B,CAAJ,EAAkC,AHJZ,CAAA,CCPX,CDOY,GCPiB,SAAS,KAAK,OAA/C,EAAwD;AEY7D,ADPH,AFE4B,ACNzB,WEWK,AFXA,IDMoB,CAAC,CAAC,CAAF,ECNzB,GDMiC,ACNhB,EEWjB,CAAoB,EHLK,ACNH,IDMoB,CGK1C,AHL2C,CAAC,CAAF,ECN1C,GDMkD,KAAzB;AGMzB,AHNuD,ACLxD,KAFM,EDOF,CAAD,GGMG,AFXA,CDMJ,GCNQ,EDMH,CAAC,CGKP,CAAc,AFXA,KDMb,EGKD,CHLiB,CAAhB,ACNQ,KDMc,ACNK,IAAnB,CDKP,GCLkC,CDMJ,KAAK,CAAC,ECNO,KDMb,ACNkB,GDMF,CAAhB,ECN3B,EAAqD,CDMJ,KADpD,IAED,KAAK,CAAC,OAAN,GAAgB,IAAhB,CAAqB,UAAA,CAAA,EAAC;AGKvB,ADPJ,AFE+B,ACN3B,ECIJ,IAAA,CAAA,ICOS,AFXA,IDMsB,CEF/B,AFEgC,CEFhC,AFEiC,CAAF,EGK3B,AFXA,CEWe,EHLoB,ACNlB,ECIrB,GCOI,ADPJ,AFE+B,ACNL,IDMsB,CAAC,CAAC,CAAF,ECN5C,GCIJ,AFEwD,KAAzB;AGM3B,ADPF,AFC2D,ACL1D,KAFM,EDOJ,CAFH,EAE6D,CGMtD,ADPA,ADJA,KCIK,ICOV,CAAe,ADPjB,OCOE;AACA,ADPH,AFCG,ACLA,GCEJ,QCSS,AFXA,EDKA,MAAL,CGMA,AHNY,ACLZ,CEWe,EFXE,CDKjB,CAAiB,GGMjB,CHNqB,GCLrB,ODKiB,CAAS,KAAT,EAAgB,KAAhB,CAAjB;AGOA,AHND,ACLA,WEWM,SAAL,CAAe,OAAf;AACA,ADPJ,AFCG,ACLF,ECID,CDhBA,GCgBA,CAAA,ICOS,KDPT,CAAA,ICOI,CAAgB,OAAhB,IDPJ,GAAA,YAAA;ACQI,ADPF,AFCD,GAXD,QGiBS,ADPA,ICOL,CAAU,ADPA,MCOV,CAAiB,IAAjB,EDPF;ACQC,ADPF,ADLD,EAAA,CCGA,IDHA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;ADOA,ACNE,EDMF,IAAA,CAAA,ECNO,IAAL,CAAU,EDMZ,CAAA,CCNE,CAAe,KAAK,IAApB,EDMF,GAAA,UAAc,IAAd,EAAwB;AGMtB,ADNF,AFEE,EEFF,ECME,EDNF,CAAA,IFES,KEFT,AFEc,CEFd,KFES,CAAY,EGIE,CAAC,CHJf,CAAiB,CEF1B,ECM6B,CDN7B,GCMwB,CAAU,EHJR,EGIF,CAAe,CDN1B,CFEa,EGIF,AHJO,CGIR,ADNvB,CCME,CDNuB;ACOxB,ADNC,AFCiC,ACPjC,GEFF,KFEM,GCMG,EFC0B,ACPxB,GCMG,EFC0B,CAAC,CAAN,CCP7B,ECMG,CDNa,CDOyB,EEDtB,EFC0B,ACPxB,CDOyB,CEDvB,AFCM,ECPb,CAAU,CCMC,AFCwB,KEDnB,AFCwB,ACP5D,CDO6D,CAAN,ACPjB,KDO6B,CEDnE,GFCuE,CAAC,CAAvC;AEAlC,AFA0E,ACNvE,GCIJ,EFES,KAAuE,CCNvE,IAAL,CAAU,GDMZ,ECNE;AEaJ,AHNC,ACNE,EEYH,CHTA,KGSA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,OAAf,EAAgD;AACxC,ADNR,EAAA,IAAA,CAAA,CCMQ,EAAA,GAAA,GDNR,CAAA,CCMQ,IAAA,CAAA,ADNR,GAAA,UAAO,GCMC,CDNR,CCMQ,CDNW;ACMX,ADLN,AFAF,ACPE,EDOF,IAAA,CAAA,CGKU,CDLH,GDPG,CEYA,GAAA,AHLV,CEAE,AFAF,ACPe,CEYL,CAAA,CDLQ,ICKV,ADLc,EDPpB,CCOuB,CFAzB,GAAA,CEA8B,SFAlB,IEAa,AFAzB,CEA4C,CFAtB,IEApB;ACKM,ADHN,AFDA,ACPE,QEWa,AHJT,CECD,EDRE,EDOI,CGII,ADHf,CAAW,CFDG,CGIC,CFXb,CEWa,ADHf,CCGe,CHJI,KGIb,CHJQ,CAAY,IAAZ,CAAiB,UAAA,KAAA,EAAK;AAAI,ACNpC,aDMoC,ACN/B,IAAL,CDMyC,CAAC,CAAN,ACNxB,IAAI,CDMgC,IAAI,CAAC,CAAjB,GCNxB,CDM8C,ACNrC,KDM0C,ACNrC,CDMsC,CAAN,ECNrC,CAAU,CAAV,CDMiD,ECNnC,CAAvB,CDM8D,CAAC,ACNrC,CDMF,ICNO,IAAL,CAAU,CAApC,CAAZ;AEYJ,ADHA,AFHgF,ACL5E,IEWJ,CHNc,CAAd,KGMO,CAAC,ADHA,KAAK,ICGb,GAAoB,GDHZ,EAAR,ICGA;AACA,ADHE,AFHF,IGMA,IHNM,CAAC,EGMA,ADHA,CCGC,ADHA,AFHE,CEGR,IFHa,GGMf,CAAiB,CAAjB,CHNU,CGMU,AHNE,CGMtB,EAAuB,IHNb,CGMV,AHN8B,EGMA,GHNpB,CAAV,EGMA;AACD,ADHK,AFHJ,ACNE,GEOJ,MHDO,ECNE,ECSE,EFHT,CEGI,AFHQ,CCNV,KDMF,CAAmB,CAAnB,EAAsB,CAAtB;AEII,AFHL,ACNK,GDEN,UCFW,IAAL,GAAY,IAAI,UAAJ,CAAS,KAAK,IAAL,CAAU,CAAnB,EAAsB,KAAK,IAAL,CAAU,CAAV,GAAc,CAApC,CAAZ;AEaN,AFZM,EEYN,MAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,OAAV,EAA2C;AACnC,ADJJ,AFFJ,EAAA,IAAA,CAAA,CGMQ,EAAA,CDJC,CAAL,CCII,GHNR,CAAA,CGMQ,IAAA,CAAA,AHNR,GAAA,YAAA,CGMQ,EAAA;AAAA,ADHF,AFFJ,ACPE,QEYM,AHLJ,GCPG,EEYC,ADHC,AFFA,ECPP,CEYM,EAAA,ADHJ,CCGI,ADHO,AFFX,CAAY,GEEZ,CCGE,EHLF,KAAuB,CAA3B,EAA6B;AGKvB,ADFF,AFFF,ACPE,QEWW,KDFN,AFFA,ACPA,CEWM,GAAA,AHJb,ACPE,CCSA,CCEW,CAAA,AFXC,ECSE,EDTE,CCShB,CCEE,QFXU,CAAS,KAAK,IAAL,CAAU,CAAnB,EAAsB,KAAK,IAAL,CAAU,CAAV,GAAc,CAApC,CAAZ;ACUA,AFFH,ACPG,KDKJ,MAGI,EECK,IAAL,CAAU,WAAV,CAAsB,KAAK,KAAL,CAAW,OAAX,EAAtB;ACGJ,AHHE,IGGF,OAAO,CAAC,CHHC,GGGT,EHHE,CGGa,MAAM,GAAG,GAAT,GAAe,WAA9B;AACA,ADHI,AFAH,ACTC,IEYF,OAAO,AFZA,CEYC,ADHA,KAAK,ADTX,ICSM,CAAU,ECGlB,GAAuB,CDHf,EAAJ,EAAwB,GCG5B;AACA,ADHM,AFAP,ACTK,GDEN,CGUE,OAAO,CAAC,CFZC,ECSE,EDTP,GAAY,CEYhB,CDHM,ECGc,AFZA,QEYpB,EFZgB,CAAS,KAAK,IAAL,CAAU,CAAV,GAAc,CAAvB,EAA0B,KAAK,IAAL,CAAU,CAApC,CAAZ;AEaJ,ADHK,ADTD,IEYJ,OAAO,CAAC,SAAR,GAAoB,wBAApB;AACA,AHJF,ACrBE,EDqBF,EGIE,EHJF,CAAA,IGIS,CAAC,IHJV,CAAA,GGIE,CAAiB,KHJnB,GAAA,CGIE,EAA4B,KAAK,GAAG,CAApC,AHJF,EGIyC,MAAM,GAAG,CAAhD;AACD,ADfC,AFWA,ACRD,GEID,AFvBA,QD2BS,KAAK,MAAZ;AECD,AFAA,GEjBD,AFeA;AGOA,AFZA,EEYA,AFZA,KAAA,CEYA,AFZA,CEYA,QFZA,CEYA,AFZA,CEYA,GFZA,GAAA,GEYA,GAAA,MFZA,IEYU,OAAV,EAA2C;AACzC,ADJF,AFDF,ACPI,ECQF,ECIE,EDJF,CAAA,EFDF,ACPS,EEYE,CAAC,CHLZ,GGKI,ADJF,CAAA,ADRE,EEYe,EFZE,CAAjB,EEYoB,GDJtB,ECIiB,CDJjB,ECI8B,UAA5B,ADJF;ACKE,ADJA,AFnDJ,AC2CG,CD3CH,EAAA,ACyCE,CEcE,IDJM,GCIC,CAAC,ADJE,GAAG,KAAK,CCIlB,GAAoB,CDJP,CAAW,ICIxB,GDJa,EAAb,CADF,CAGE;ACGA,IAAA,OAAO,CAAC,YAAR,GAAuB,KAAvB;AACA,ADHA,ADTF,EAAA,EEYE,GFZF,CCSM,ADTN,GEYS,CAAC,CDHC,IDTX,CAAA,GEYE,CDHI,CAAe,CCGC,CFZtB,ECSM,CDTN,ICS8B,KAAK,GDTnC,ECS8B,CAAW,KCGvC,EDH4B,CAAmB,IAAnB,CAA5B,EAAsD;ACItD,ADHE,ADTF,IEYA,OAAO,AFZA,CEYC,IFZI,IEYZ,AFZA,CEYiB,YAAY,IAAI,CAAC,QAAL,GAAgB,QAAhB,EAA7B,EAAyD,KAAK,KAA9D,EAAqE,KAAK,KAA1E;AACD,ADHG,ADTH,GEMD,AFRA,UCWW,CAAC,CAAR;AACD,KAPH,CASE;ACCF,AFXA,EEWA,AFXA,KAAA,CEWA,AFXA,CEWA,QFXA,CEWA,AFXA,CEWA,MFXA,GEWA,AFXA,GEWA,OFXQ,GEWE,CFXV,EAAkB,IEWlB,EAA2C;AACzC,AFXA,IEWA,IFXI,GEWG,AFXA,CEWC,EFXE,EEWV,GAAe,AFXf,KEWoB,KAAL,GAAa,UAA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","file":"GameUI.d604de4c.js","sourceRoot":"..\\static","sourcesContent":["export const CELLS_HORIZONTAL = 80;\r\nexport const CELLS_VERTICAL = 40;\r\nexport const SPEED = 100;\r\nexport const MAX_LEVEL = 10;\r\n\r\nexport interface Configuration {\r\n  level: number;\r\n  speed: number;\r\n  nbCellsX: number;\r\n  nbCellsY: number;\r\n  width: number;\r\n  height: number;\r\n  cellWidth: number;\r\n  cellHeight: number;\r\n  apples: number;\r\n}\r\n","export class Cell {\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n","import { Cell } from \"./Cell\";\r\nimport { Configuration, CELLS_HORIZONTAL, CELLS_VERTICAL } from \"./Configuration\";\r\nimport { Snake } from \"./Snake\";\r\n\r\nexport class Grid {\r\n  private configuration: Configuration;\r\n  apples = [\r\n    new Cell(33, 22),\r\n    new Cell(35, 22),\r\n    new Cell(37, 22),\r\n    new Cell(39, 22),\r\n    new Cell(41, 22)\r\n  ];\r\n\r\n  constructor(configuration: Configuration) {\r\n    this.configuration = configuration;\r\n  }\r\n\r\n  seed(snake: Snake): void {\r\n    for (; this.apples.length < this.configuration.level + this.configuration.apples;) {\r\n      var randX = Math.floor(Math.random() * CELLS_HORIZONTAL);\r\n      var randY = Math.floor(Math.random() * CELLS_VERTICAL);   \r\n      \r\n    if (!this.apples.find(c => c.x === randX && c.y === randY)\r\n    && snake.getHead().x !== randX && snake.getHead().y !== randY\r\n    && snake.getTail().some(c => c.x !== randX && c.y !== randY)){\r\n      this.apples.push(new Cell(randX, randY));\r\n    }\r\n    }\r\n  }\r\n\r\n  isAppleInside(cell: Cell): boolean {\r\n\r\n    return this.apples.find(apple => apple.x === cell.x && apple.y === cell.y) != undefined;\r\n  }\r\n\r\n  removeApple(cell: Cell): void {\r\n    const apple = this.apples.find(apple => apple.x === cell.x && apple.y === cell.y)!;\r\n    const i = this.apples.indexOf(apple);\r\n    this.apples.splice(i, 1);\r\n  }\r\n\r\n  isDone(): boolean {\r\n    if (this.apples.length === 0){\r\n      return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n  getApples(): Cell[] {\r\n    return this.apples;\r\n  }\r\n}\r\n","import { Cell } from \"./Cell\";\r\nimport { Direction } from \"./Direction\";\r\n\r\nexport class Snake {\r\n  head = new Cell(2, 0);\r\n  tail = [new Cell(0, 0), new Cell(1, 0)];\r\n  direction: Direction = \"Right\";\r\n  tailSize = 2;\r\n\r\n\r\n\r\n  setDirection(direction: Direction) {\r\n    if (this.direction === 'Right' && direction === 'Left') {\r\n      this.direction = this.direction;\r\n    } else if (this.direction === 'Down' && direction === 'Up') {\r\n      this.direction = this.direction;\r\n    } else if (this.direction === 'Left' && direction === 'Right') {\r\n      this.direction = this.direction;\r\n    } else if (this.direction === 'Up' && direction === 'Down') {\r\n      this.direction = this.direction;\r\n    } else {\r\n      this.direction = direction;\r\n    }\r\n  }\r\n  move() {\r\n    this.tail.push(this.head);\r\n    if (this.tailSize < this.tail.length) {\r\n      this.tail.shift();\r\n    }\r\n    switch (this.direction) {\r\n      case 'Right':\r\n        this.head = new Cell(this.head.x + 1, this.head.y);\r\n        break;\r\n      case 'Down':\r\n        this.head = new Cell(this.head.x, this.head.y + 1);\r\n        break;\r\n      case \"Up\":\r\n        this.head = new Cell(this.head.x, this.head.y - 1);\r\n        break;\r\n      case \"Left\":\r\n        this.head = new Cell(this.head.x - 1, this.head.y);\r\n        break;\r\n    }\r\n  }\r\n\r\n  grow() {\r\n    this.tailSize += 3;\r\n  }\r\n\r\n  getHead(): Cell {\r\n    return this.head;\r\n  }\r\n\r\n  isSnake(cell: Cell): boolean {\r\n    var res = false;\r\n    this.tail.forEach(element => {\r\n      if (cell.x === element.x && cell.y === element.y) {\r\n        res = true;\r\n        return;\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n  getDirection(): Direction {\r\n    return this.direction;\r\n  }\r\n\r\n  getTail(): Cell[] {\r\n    return this.tail;\r\n  }\r\n}\r\n","import { Grid } from \"./Grid\";\r\nimport { Snake } from \"./Snake\";\r\nimport { Configuration, MAX_LEVEL } from \"./Configuration\";\r\nimport { Cell } from \"./Cell\";\r\n\r\nexport class Game {\r\n  private score: number = 0;\r\n  private running: boolean = false;\r\n  private grid: Grid;\r\n  private snake: Snake;\r\n  private configuration: Configuration;\r\n  private nextTick: number;\r\n  public gameState: string;\r\n  \r\n  constructor(configuration: Configuration) {\r\n    this.configuration = configuration;\r\n    this.snake = new Snake();\r\n    this.grid = new Grid(this.configuration);\r\n    this.nextTick = 0;\r\n    this.running = true;\r\n    this.gameState = \"\";\r\n  }\r\n\r\n  getSnake(): Snake {\r\n    return this.snake;\r\n  }\r\n\r\n  getConfiguration() {\r\n    return this.configuration;\r\n  }\r\n\r\n  shouldUpdate(time: number): boolean {\r\n    return this.running && time >= this.nextTick;\r\n  }\r\n\r\n  update(time: number) {\r\n    this.nextTick = time + this.configuration.speed;\r\n\r\n    this.snake.move();\r\n\r\n    switch (this.checkState()) {\r\n      case -1:\r\n        this.die();\r\n        break;\r\n      case 1:\r\n        this.snake.grow();\r\n        this.score += 100;\r\n        this.grid.removeApple(this.snake.getHead());\r\n        if (this.grid.isDone()) {\r\n          this.levelUp();\r\n        }\r\n    }\r\n  }\r\n\r\n  checkState() {\r\n    const cell = this.snake.getHead();\r\n\r\n    // left the play area or ate itself??\r\n    if (this.isOutside(cell) || this.snake.isSnake(cell)) {\r\n      // dead\r\n      return -1;\r\n    }\r\n\r\n    // ate apple?\r\n    if (this.grid.isAppleInside(cell)) {\r\n      return 1;\r\n    }\r\n\r\n    // nothing special\r\n    return 0;\r\n  }\r\n\r\n  levelUp() {\r\n    this.score += 1000;\r\n    this.configuration.level++;\r\n    if (this.configuration.level < MAX_LEVEL) {\r\n      this.configuration.speed -= 7;\r\n      this.grid.seed(this.snake);\r\n    } else {\r\n      this.win();\r\n    }\r\n  }\r\n\r\n  win() {\r\n    this.stop();\r\n    this.gameState = \"YOU WON!\";\r\n  }\r\n\r\n  die() {\r\n    this.stop();\r\n    this.gameState = \"YOU LOST!\";\r\n  }\r\n\r\n  isOutside(cell: Cell) {\r\n    const { nbCellsX, nbCellsY } = this.configuration;\r\n    return cell.x < 0 || cell.x >= nbCellsX || cell.y < 0 || cell.y >= nbCellsY;\r\n  }\r\n\r\n  getScore(): number {\r\n    return this.score;\r\n  }\r\n\r\n  getGrid(): Grid {\r\n    return this.grid;\r\n  }\r\n\r\n  stop() {\r\n    this.running = false;\r\n  }\r\n  getLevel(): number {\r\n    return this.configuration.level;\r\n  }\r\n  getGameState(): string{\r\n    return this.gameState;\r\n  }\r\n}\r\n","import {\r\n  Configuration,\r\n  CELLS_HORIZONTAL,\r\n  CELLS_VERTICAL,\r\n  SPEED\r\n} from \"./engine/Configuration\";\r\nimport { Game } from \"./engine/Game\";\r\n\r\nconst CELL_SIZE = 20;\r\nconst SCALE = 2.0;\r\n\r\nclass GameUI {\r\n  private canvas: HTMLCanvasElement;\r\n  private game: Game;\r\n\r\n  constructor(canvas: HTMLCanvasElement, game: Game) {\r\n    this.canvas = canvas;\r\n    this.game = game;\r\n    requestAnimationFrame(this.draw.bind(this));\r\n\r\n    window.addEventListener(\"keydown\", this.onKeyDown.bind(this), false);\r\n    window.focus();\r\n  }\r\n\r\n  draw(time: number) {\r\n    const context = this.canvas.getContext(\"2d\")!;\r\n    this.drawGameState(context);\r\n    if (this.game.shouldUpdate(time)) {\r\n      this.drawBackground(context);\r\n      this.drawGrid(context);\r\n      this.drawBrand(context);\r\n      this.drawScore(context);\r\n      this.drawLevel(context);\r\n      this.drawSnake(context);\r\n      this.drawApples(context);\r\n      this.game.update(time);\r\n    }\r\n    requestAnimationFrame(this.draw.bind(this));\r\n  }\r\n\r\n  drawBackground(context: CanvasRenderingContext2D) {\r\n    const { width, height } = this.game.getConfiguration();\r\n\r\n    context.fillStyle = \"#4caf50\";\r\n    context.fillRect(0, 0, width, height);\r\n  }\r\n\r\n  drawBrand(context: CanvasRenderingContext2D) {\r\n    const { width, height } = this.game.getConfiguration();\r\n\r\n    context.font = height / 2.5 + \"px Roboto\";\r\n    context.textBaseline = \"middle\";\r\n    context.textAlign = \"center\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText(\"CODELEX\", width / 2, height / 2);\r\n  }\r\n\r\n  drawScore(context: CanvasRenderingContext2D) {\r\n    context.font = 35 * SCALE + \"px Arial\";\r\n    context.textAlign = \"left\";\r\n    context.textBaseline = \"top\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText('Score: ' + game.getScore().toString(), 10 * SCALE, 10 * SCALE);\r\n  }\r\n  drawLevel(context: CanvasRenderingContext2D) {\r\n    context.font = 35 * SCALE + \"px Arial\";\r\n    context.textAlign = \"left\";\r\n    context.textBaseline = \"top\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText('Level: ' + game.getLevel().toString(), 10 * SCALE, 50 * SCALE);\r\n  }\r\n  drawGameState(context: CanvasRenderingContext2D) {\r\n    context.font = 35 * SCALE + \"px Arial\";\r\n    context.textAlign = \"left\";\r\n    context.textBaseline = \"top\";\r\n    context.fillStyle = \"#e91e63\";\r\n    context.fillText(game.gameState, 10 * SCALE, 90 * SCALE);\r\n  }\r\n\r\n  drawGrid(context: CanvasRenderingContext2D) {\r\n    const game = this.game;\r\n    const { width, height, cellWidth, cellHeight } = game.getConfiguration();\r\n    const lineWidth = 1 * SCALE;\r\n\r\n    context.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n    context.lineWidth = lineWidth;\r\n\r\n    for (let x = 0; x <= width; x += cellWidth) {\r\n      context.beginPath();\r\n      context.moveTo(x, 0);\r\n      context.lineTo(x, height);\r\n      context.stroke();\r\n    }\r\n\r\n    for (let y = 0; y <= height; y += cellHeight) {\r\n      context.beginPath();\r\n      context.moveTo(0, y);\r\n      context.lineTo(width, y);\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  drawApples(context: CanvasRenderingContext2D) {\r\n    const { cellWidth, cellHeight } = game.getConfiguration();\r\n    const lineWidth = 1 * SCALE;\r\n\r\n    context.fillStyle = \"#e91e63\";\r\n    const apples = game.getGrid().getApples();\r\n    apples.forEach(cell =>\r\n      context.fillRect(\r\n        cellWidth * cell.x + lineWidth,\r\n        cellHeight * cell.y + lineWidth,\r\n        cellWidth - lineWidth * 2,\r\n        cellHeight - lineWidth * 2\r\n      )\r\n    );\r\n  }\r\n\r\n  drawSnake(context: CanvasRenderingContext2D) {\r\n    const snake = this.game.getSnake();\r\n    const { cellWidth, cellHeight } = this.game.getConfiguration();\r\n    // head\r\n    const size = (CELL_SIZE * SCALE) / 10;\r\n    const offset = (CELL_SIZE * SCALE) / 3;\r\n    const x = cellWidth * snake.getHead().x;\r\n    const y = cellHeight * snake.getHead().y;\r\n    context.fillStyle = \"#111111\";\r\n    context.fillRect(x, y, cellWidth, cellHeight);\r\n    // eyes\r\n    switch (snake.getDirection()) {\r\n      case \"Up\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(x + 2 * offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Down\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + 2 * offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(\r\n          x + 2 * offset,\r\n          y + 2 * offset,\r\n          size,\r\n          0,\r\n          2 * Math.PI,\r\n          false\r\n        );\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Right\":\r\n        context.beginPath();\r\n        context.arc(x + 2 * offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(\r\n          x + 2 * offset,\r\n          y + 2 * offset,\r\n          size,\r\n          0,\r\n          2 * Math.PI,\r\n          false\r\n        );\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Left\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(x + offset, y + 2 * offset, size, 0, 2 * Math.PI, false);\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n    }\r\n    // tail\r\n    context.fillStyle = \"#333333\";\r\n    const tail = snake.getTail();\r\n    tail.forEach(cell =>\r\n      context.fillRect(\r\n        cellWidth * cell.x,\r\n        cellHeight * cell.y,\r\n        cellWidth,\r\n        cellHeight\r\n      )\r\n    );\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) {\r\n    const snake = this.game.getSnake();\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Up\");\r\n        break;\r\n      case \"ArrowDown\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Down\");\r\n        break;\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Left\");\r\n        break;\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Right\");\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nconst createCanvas = (): HTMLCanvasElement => {\r\n  const container = document.getElementById(\"game\")!;\r\n  const canvas = document.createElement(\"Canvas\") as HTMLCanvasElement;\r\n\r\n  container.appendChild(canvas);\r\n  // canvas element size in the page\r\n  canvas.style.width = CELLS_HORIZONTAL * CELL_SIZE + \"px\";\r\n  canvas.style.height = CELLS_VERTICAL * CELL_SIZE + \"px\";\r\n\r\n  // image buffer size\r\n  canvas.width = CELLS_HORIZONTAL * CELL_SIZE * SCALE;\r\n  canvas.height = CELLS_VERTICAL * CELL_SIZE * SCALE;\r\n\r\n  return canvas;\r\n};\r\n\r\nconst createConfiguration = (canvas: HTMLCanvasElement): Configuration => {\r\n  return {\r\n    level: 0,\r\n    speed: SPEED,\r\n    width: canvas.width,\r\n    height: canvas.height,\r\n    nbCellsX: CELLS_HORIZONTAL,\r\n    nbCellsY: CELLS_VERTICAL,\r\n    cellWidth: canvas.width / CELLS_HORIZONTAL,\r\n    cellHeight: canvas.height / CELLS_VERTICAL,\r\n    apples: 5\r\n\r\n  };\r\n};\r\n\r\nvar canvas = createCanvas();\r\nvar configuration = createConfiguration(canvas);\r\nvar game = new Game(configuration);\r\n\r\nnew GameUI(canvas, game);\r\n"]}